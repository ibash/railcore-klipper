# Full pinout located here: https://github.com/Duet3D/Duet3-Mainboard-6HC/blob/master/Duet3_Mainboard_v1.01/Duet3_MB_Schematic_v1.01.pdf
#
# TODO(ibash) factor this out into multiple configs that are included, maybe
# something like: drivers.cfg, hotend.cfg, bed.cfg, filters.cfg, euclid.cfg, and
# misc.cfg

[include mainsail.cfg]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_same70q20b_00313853314B51353234303132303333-if00

[printer]
kinematics: corexy
max_velocity: 600
# TODO(ibash) max_accel was 3000 for me before
max_accel: 3600
max_z_velocity: 16
max_z_accel: 200

[adc_scaled vref_scaled]
vref_pin: PC0
vssa_pin: PC13

# TODO(ibash) check all dir_pins with drivers from duet config


[stepper_x]
#driver 0
step_pin: PC18
dir_pin: !PB5
enable_pin: !PA9
microsteps: 16
rotation_distance: 32
full_steps_per_rotation: 200
endstop_pin: ^PD15 #io1
position_endstop: -12
position_min: -12
position_max: 295

# TODO(ibash) enable after smoke test
homing_speed: 60.0
second_homing_speed: 10.0

[tmc5160 stepper_x]
cs_pin: PD17
spi_bus: usart1
chain_position: 1
chain_length: 6
interpolate: False
# 2250ma / sqrt(2)
run_current: 1.6
sense_resistor: 0.05
stealthchop_threshold: 999999
#driver_SGT: 2
#diag0_pin: ^!PD29

[stepper_y]
#driver 1
step_pin: PC16
dir_pin: PD10
enable_pin: !PA9
microsteps: 16
rotation_distance: 32
full_steps_per_rotation: 200
endstop_pin: ^PD28 #io2
position_endstop: 0
position_min: 0
position_max: 305
homing_speed: 60.0
second_homing_speed: 10.0

[tmc5160 stepper_y]
cs_pin: PD17
chain_position: 2
chain_length: 6
interpolate: False
# 2250ma / sqrt(2)
run_current: 1.6
sense_resistor: 0.05
stealthchop_threshold: 999999
#driver_SGT: 2
#diag0_pin: ^!PC17

[stepper_z]
#driver2
step_pin: PC28
dir_pin: PA4
enable_pin: !PA9
microsteps: 16
rotation_distance: 4 				
full_steps_per_rotation: 400

# TODO(ibash) set this up for euclid
endstop_pin: probe:z_virtual_endstop
position_min: 0
position_max: 338
homing_speed: 5.0
# TODO(ibash) enable after smoke test
# homing_retract_dist: 3.0

[tmc5160 stepper_z]
cs_pin: PD17
chain_position: 3
chain_length: 6
interpolate: False
# 1200ma /sqrt(2)
run_current: 0.85
sense_resistor: 0.05
# TODO(ibash) enable after smoke test
# idle_current_percent: 25

[stepper_z1]
#driver3
step_pin: PC1
dir_pin: PA22
enable_pin: !PA9
microsteps: 16
rotation_distance: 4 				
full_steps_per_rotation: 400

[tmc5160 stepper_z1]
cs_pin: PD17
chain_position: 4
chain_length: 6
interpolate: False
# 1200ma /sqrt(2)
run_current: 0.85
sense_resistor: 0.05
# TODO(ibash) enable after smoke test
# idle_current_percent: 25

[stepper_z2]
#driver4
step_pin: PC4
dir_pin: PC3
enable_pin: !PA9
microsteps: 16
rotation_distance: 4 				
full_steps_per_rotation: 400

[tmc5160 stepper_z2]
cs_pin: PD17
chain_position: 5
chain_length: 6
interpolate: False
# 1200ma /sqrt(2)
run_current: 0.85
sense_resistor: 0.05
# TODO(ibash) enable after smoke test
# idle_current_percent: 25

[extruder]
#driver5
step_pin: PC9
dir_pin: PD14
enable_pin: !PA9
rotation_distance: 7.7108433728
microsteps: 16
full_steps_per_rotation: 400
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA24 #out1
sensor_type: ATC Semitec 104GT-2
pullup_resistor: 2200 # The board uses a 2.2k ohm pullup to work with a PT1000
sensor_pin: vref_scaled:PC29 #temp1
min_temp: 0
max_temp: 320
max_extrude_only_distance: 250.0
control: pid
pid_kp: 24.277
pid_ki: 1.208
pid_kd: 121.993

[tmc5160 extruder]
cs_pin: PD17
chain_position: 6
chain_length: 6
interpolate: False
run_current: .6
sense_resistor: 0.05

[heater_fan heatbreak_fan]
pin: PC5
heater: extruder
heater_temp: 50.0

[fan]
pin: PA15

[fan_generic filter_1]
pin: PA12

[fan_generic filter_2]
pin: PC8

[heater_bed]
# TODO(ibash) should this heater pin be inverted?
heater_pin: PA7
sensor_type: Generic 3950
sensor_pin: vref_scaled:PC15
pullup_resistor: 2200
min_temp: 0
max_temp: 120
control: pid
pid_kp: 36.385
pid_ki: 0.215
pid_kd: 1537.711

#___ Euclid Probe ___#
[force_move]
enable_force_move: True

[respond]
default_type: echo
default_prefix: echo:

# probe config in euclid.cfg
# [probe]
# pin: ^PE3
# x_offset: 3.5
# y_offset: 36
# # z_offset: 0
# # TODO(ibash) Run PROBE_CALIBRATE to calibrate Z offset
# # previously I had an offset of 6.35
# speed: 5
# samples: 3
# samples_result: average
# sample_retract_dist: 5.0
# samples_tolerance: 0.050
# samples_tolerance_retries: 3
# lift_speed: 30

# TODO(ibash) rename to euclid_macros.cfg
#
#  __________________________________________________________________________
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                * Probe Ready Position                  |
#  |                                  X150 Y150                             |
#  |                                                                        |
#  |                                                                        |
#  | * Dock Re-entry staging  position                                      |
#  |   X0 Y70                                                               |
#  |                                                                        |
#  |                                                                        |
#  | * Dock Exit Position                                                   | 
#  |   X0 Y40                                                               |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |   X0 Y0    X30 Y0       X100 Y0                                        |
#  | * Dock   * Dock Side  * Dock Preflight                                 |
#  |________________________________________________________________________| 
#
# Above is example 300x300 bed to coorelate with macros and movements below.
# This example is for a fixed dock, fixed gantry/carraige and moving bed motion system. 
# RailCore, Ender5, V-Core3, etc...
# For moving gantry sytem like Voron 2.4, there are some subltle things to change.
# We have attempetd indicate those in the comments throughout the example code.   
# Z elevation is shown in movements to ensure adequate Z elevation to avoid crashes. 
# With the coupling magnets +/- 2mm of the nozzle the probe trigger height is on the
# ordeer of 12mm, so 15mm is used as a safe height.
#
# the printer.cfg-snip.txt has the following config settings 
# # 
# #...
# # add this include statement at the head of the config file
# [include euclid.cfg]
# #
#
# #
# # enable enable_force_move to enable FORCE_MOVE and SET_KINEMATIC_POSIITION
# enable_force_move:true
# # ...
#
# It is assumed that there is a seperate Z-endstop that is used to home Z
# IF YOU ARE USING PROBE AS ENDSTOP AND PROBE homing_overide must be altered
#
# some configurtions may need FORCE_MOVE enabled for kinematic position functionS
# https://www.klipper3d.org/Config_Reference.html?h=force_move#force_move
#
# if you have the hardware defined in the printer.cfg comment out the [probe] section below.
[probe]
pin: ^PE3
x_offset: 3.5
y_offset: 36
z_offset: 6.35
# TODO(ibash) Run PROBE_CALIBRATE to calibrate Z offset
# previously I had an offset of 6.35
speed: 5
samples: 3
samples_result: average
sample_retract_dist: 5.0
samples_tolerance: 0.050
samples_tolerance_retries: 3
lift_speed: 30

#
# example homing overide to use Euclid as an endstop and Z-probe
# example assumes that the bed is 300x300
# assumes homing Z at center of bed
# assumes that macro for probe deploy and retract below are called M401 and M402

# [homing_override]
# gcode:
#   SET_KINEMATIC_POSITION Z=0
#   G0 Z15 F500           ; raise bed to 15
#   G28 X Y               ; home Y & Y
#   M401                  ; deploy Euclid Probe
#   G0 X150 Y150 F6000    ; move to X150 Y150
#   G28 Z                 ; home Z
#   G0 Z15 F500           ; raise bed to 15
#   M402                  ; retract Euclid Probe
# axes: z
# set_position_z: -5

[homing_override]
gcode:
  {action_respond_info("HOMING OVERRIDE")}
  {% set axes = params.keys() | map("list") | sum(start=[]) %}
  {% set home_all = 'X' not in axes and 'Y' not in axes and 'Z' not in axes %}
  {action_respond_info("axes")}
  {action_respond_info(axes|tojson)}
  {action_respond_info("home_all")}
  {action_respond_info(home_all|tojson)}

  # Enable motors and wait for 150ms for trinamic tuning
  # TODO(ibash) maybe remove
  SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
  SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
  G4 P150

  # TODO(ibash) do we need to restore the kinematic position after? Or maybe
  # something like:
  # if z is homed, then move down, if z is not homed then set kinematic position
  # SET_KINEMATIC_POSITION Z=0
  # G1 Z4 F500

  # TODO(ibash) also home x if z is being homed
  # TODO(ibash) this if:
  # 1. homing x or homing all
  # 2. homing z, and x is not homed
  {% if home_all or 'X' in axes or 'Z' in axes %}
  # TODO(ibash) move bed down to prevent scraping
  G28 X
  # TODO(ibash) move bed up to prevent scraping

  # x-axis endstop is beyond the bed enough so that the 5015 fan hits the magnum
  # pulley when homing y, so scoot to the right
  G1 X20 F3600
  {% endif %}

  # TODO(ibash) also home y if z is being homed
  {% if home_all or 'Y' in axes or 'Z' in axes %}
  # TODO(ibash) move bed down to prevent scraping
  G28 Y
  # TODO(ibash) move bed up to prevent scraping
  {% endif %}

  {% if home_all or 'Z' in axes %}
  SET_KINEMATIC_POSITION Z=0
  G1 Z10 F500           ; move bed down to prevent scraping
  M401                  ; deploy probe
  G0 X150 Y150 F6000    ; move to X150 Y150
  G28 Z                 ; home Z
  G1 Z10 F500           ; raise bed to 10
  M402                  ; retract Euclid Probe
  {% endif %}


  #PAUSE

# [homing_override]
# gcode:
#   {% set axes = [y for x in params.keys() for y in list(x)] %}
#   {% set home_all = len(set(['X', 'Y', 'Z']) - set(axes)) == 3 %}
#   {% if home_all or 'X' in axes %}
#   ; do the x homing here
#   {action_respond_info("HOME X HOME X HOME X")}
#   G28 X
#   {% endif %}
# 
#   {% if home_all or 'Y' in axes %}
#   ; do the y homing here
#   {action_respond_info("HOME Y HOME Y HOME Y")}
#   G28 Y
#   {% endif %}
# 
#   {% if home_all or 'Z' in axes %}
#   ; do the z homing here
#   {action_respond_info("HOME Z HOME Z HOME Z")}
#   ; TODO(ibash) update this to config from duet
#   SET_KINEMATIC_POSITION Z=0
#   G0 Z15 F500           ; raise bed to 15
#   G28 X Y               ; home Y & Y
#   M401                  ; deploy Euclid Probe
#   G0 X150 Y150 F6000    ; move to X150 Y150
#   G28 Z                 ; home Z
#   G0 Z15 F500           ; raise bed to 15
#   M402                  ; retract Euclid Probe
#   {% endif %}
# set_position_z: -5
# #axes: z

[bed_mesh]
speed: 250
algorithm: bicubic
# for full sheets
mesh_min: 4,36
mesh_max: 296,296
# for 300x300 sheets
#mesh_min: 20,36
#mesh_max: 280,280
probe_count: 9,9

[z_tilt]
# Position of bed pivot points - Measure at bed retaining bolts
z_positions:
  -8,19
  -8,276
  342,148
points:
  75,75
  75,225
  225,225
  225,75
retries: 4
retry_tolerance: 0.008 
speed: 100             #   The speed (in mm/s) of non-probing moves during the calibration.
horizontal_move_z: 10  #   The height (in mm) that the head should be commanded to move to just prior to starting a probe operation.


# Macro to Deploy Bed Probe
[gcode_macro M401]
gcode:
    G90
    {action_respond_info("Entering M401")}
    error_if_probe_deployed    ; check to make sure that the probe is not already attached
    _M401

[gcode_macro error_if_probe_deployed]
gcode:
    QUERY_PROBE                 ; check probe status
    do_error_if_probe_deployed  ; logic check to verify probe is not already deployed

[gcode_macro do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
      {action_raise_error("Euclid Probe is already deployed - Remove and Return it to the dock")}
    {% endif %}

# Macro to Deploy Bed Probe
[gcode_macro _M401]
gcode:
    G90
    {% if printer.probe.last_query %} 
      G0 Z15 F3000         ;  set approach elevation of Z15 to clear probe over bed on fixed gantry machine
      #                       for moving gantry machine this may need to be adjusted
      G0 X50 Y150 F6000    ;  move the carraige to safe position to move from. this is the pre-flight position
      G0 X0 Y280 F6000     ;  move to the side of the dock. this is the dock side position
      G4 P250              ;  wait 1/4 second 
      G0 X0 Y300 F6000     ;  move sideways over the dock to pick up probe. this is the dock position
      M400                 ;  wait for moves to finish
      G4 P250              ;  pause 1/4 sec for detection
      G0 X60 Y300 F6000    ;  move out of the dock in a straight line to the dock exit poistion
      G0 Z15               ;  move up to clear the probe over the bed of moving gantry or provide clearance for fixed gantry
      G0 X150 Y150 F6000   ;  move probe to center of bed in ready position 
    {% endif %}
    error_if_probe_not_deployed
    {action_respond_info("Exiting M401")}

[gcode_macro error_if_probe_not_deployed]
gcode:
    QUERY_PROBE
    do_error_if_probe_not_deployed
[gcode_macro do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
      {action_raise_error("Euclid Probe failed to deploy!")}
    {% endif %}

# Macro to retract Bed Probe
[gcode_macro M402]
gcode:
    G90
    {action_respond_info("Entering M402")}
    error_if_probe_not_deployed
    _M402
#
# Macro to Stow Bed Leveling Probe
[gcode_macro _M402]
gcode:
    G90
    {% if not printer.probe.last_query %} ; the logic on this needs function check
      G0 Z15 F2400                  ;  set approach elevation of Z15 for fixed gantry system to clear probe over bed
      #                             ;  for moving gantry system this may have to be altered to match your dock elevation
      G0 X150 Y150 F6000            ;  start movements at center of the bed 
      G0 X60 Y300 F6000             ;  move to the re-entry staging position
      ; G0 X0 Y40 F3000              ;  move to a position in front of the dock so a simple linear movement into dock 
      G0 X0 Y300 F6000              ;  slowly move into dock 
      M400                          ;  wait for moves to finish
      G4 P250                       ;  forced pause here so motion is definite 90 tavel to swipe
      G0 X0 Y280 F6000              ;  quick swipe off 
      G0 X150 Y150                  ;  move to front center of bed 
      G0 Z20 F500                   ;  move up to elevation of Z20
    {% endif %}                     ;  exit the if-then loop. was missing in previous versions
    error_if_probe_deployed         ;  verify that the probe is detached. is corrected error  
    {action_respond_info("Exiting M402")}
    
# Macro to perform a bed mesh calibration by wrapping it between M401/M402 macros
[gcode_macro BED_MESH_CALIBRATE]
rename_existing:    BED_MESH_CALIBRATE_ORIGINAL
    gcode:
    M401                           ; deploy Euclid Probe if needed
    BED_MESH_CALIBRATE_ORIGINAL    ; check bed level
    M402                           ; dock Euclid Probe

#  uncomment one of the following macros if necessary for your printer:
#  Z_TILT_ADJUST is for [z_tilt] config
#  QUAD_GANTRY_LEVEL is for [quad_gantry_level] config
# whitespace matters in the macros, klipper is python based
# watch your indents and spaces

[gcode_macro PROBE]
rename_existing:    PROBE_ORIGINAL
gcode:
    M401
    G1 X150 Y150 F4000
    PROBE_ORIGINAL
    G1 Z8
    M402

[gcode_macro PROBE_ACCURACY]
rename_existing:    PROBE_ACCURACY_ORIGINAL
gcode:
    M401
    G1 X150 Y150 F4000
    PROBE_ACCURACY_ORIGINAL
    G1 Z8
    M402

[gcode_macro PROBE_CALIBRATE]
rename_existing:    PROBE_CALIBRATE_ORIGINAL
gcode:
    M401
    G1 X150 Y150 F4000
    PROBE_CALIBRATE_ORIGINAL
    G1 Z8
    M402


[gcode_macro Z_TILT_ADJUST]
description: modified Z_TILT_ADJUST, wrapped with DEPLOY_PROBE/STOW_PROBE
rename_existing: Z_TILT_ADJUST_ORIGINAL
gcode:
    M401
    Z_TILT_ADJUST_ORIGINAL
    M402


[gcode_macro G32]
gcode:
    Z_TILT_ADJUST

[gcode_macro BED_MESH_CALIBRATE]
rename_existing:    BED_MESH_CALIBRATE_ORIGINAL
gcode:
    M401
    BED_MESH_CALIBRATE_ORIGINAL
    M402

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE



# Macro to perform a modified z_tilt/gantry level by wrapping it between M401/M402 macros
# [gcode_macro QUAD_GANTRY_LEVEL]
# rename_existing:    QUAD_GANTRY_LEVEL_ORIGINAL
# gcode:
#    M401                           ; deploy Euclid Probe if needed
#    QUAD_GANTRY_LEVEL_ORIGINAL         ; check bed level
#    M402                           ; dock Euclid Probe

# Macro to perform a Z_Tilt/gantry level and bed mesh calibration by wrapping both between M401/M402 macros
[gcode_macro HOME_LVL_MESH]
gcode: SET_KINEMATIC_POSITION Z=0
    G0 Z15 F500           ; raise bed to 15
    G28 X Y               ; home Y & Y
    M401                  ; deploy Euclid Probe
    G0 X150 Y150 F6000    ; move to center of be @ X150 Y150
    G28 Z                 ; home Z
# Uncomment the one needed for your printer      
#    QUAD_GANTRY_LEVEL_ORIGINAL
#    Z_TILT_ADJUST_ORIGINAL
#    G28 Z                 ; home Z
#    BED_MESH_CALIBRATE_ORIGINAL
#    G0 Z15 F500           ; raise bed to 15
#    M402                  ; retract Euclid Probe


[temperature_sensor keenovo_temp]
sensor_type: Generic 3950
sensor_pin: PC30
min_temp: 0
max_temp: 150
gcode_id: K

#___ Board temp sensors ___#
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


# TODO(ibash)
#
# [homing_override]
# [bed_mesh]
# [z_tilt]
# [skew_correction]
# macros
# ref: https://github.com/JohnOCFII/RailCore/blob/master/Duet%20Klipper%20Configs/Current/printer-22June2022.cfg
